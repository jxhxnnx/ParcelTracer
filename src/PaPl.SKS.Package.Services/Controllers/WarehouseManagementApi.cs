/*
 * Parcel Logistics Service
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.20.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;


using Microsoft.AspNetCore.Authorization;
using PaPl.SKS.Package.Services.DTOs.Models;
using PaPl.SKS.Package.Services.Attributes;
using AutoMapper;
using PaPl.SKS.BusinessLogic.Interfaces;
using PaPl.SKS.BusinessLogic;
using PaPl.SKS.DataAccess.Repository;
using PaPl.SKS.DataAccess.Sql;
using Microsoft.Extensions.Logging;
using PaPl.SKS.Package.Services.Exceptions;
using PaPl.SKS.BusinessLogic.Interfaces.Exceptions;
using System.Diagnostics.CodeAnalysis;
using System.Diagnostics;

namespace PaPl.SKS.Package.Services.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class WarehouseManagementApiController : ControllerBase
    {
        private ILogger<WarehouseManagementApiController> logger;
        private IWarehouseLogic warehouseLogic;
        private IMapper mapper;
        private Hop hop;

        /// <summary>
        /// 
        /// </summary>
        /// <param name="_logger"></param>
        /// <param name="_warehouseLogic"></param>
        /// <param name="_mapper"></param>
        public WarehouseManagementApiController(ILogger<WarehouseManagementApiController> _logger, IWarehouseLogic _warehouseLogic, IMapper _mapper)
        {
            logger = _logger;
            warehouseLogic = _warehouseLogic;
            mapper = _mapper;
        }
       
        /// <summary>
        /// Exports the hierarchy of Warehouse and Truck objects. 
        /// </summary>
        /// <response code="200">Successful response</response>
        /// <response code="400">An error occurred loading.</response>
        /// <response code="404">No hierarchy loaded yet.</response>
        [HttpGet]
        [Route("/warehouse")]
        [ValidateModelState]
        [SwaggerOperation("ExportWarehouses")]
        [SwaggerResponse(statusCode: 200, type: typeof(Warehouse), description: "Successful response")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "An error occurred loading.")]
        public virtual IActionResult ExportWarehouses()
        {
            try
            {
                logger.LogInformation("WarehouseManagementApi ExportWarehouses started");


                BusinessLogic.Entities.Hop hop = warehouseLogic.ExportWarehouse();

                var responseHop = mapper.Map<BusinessLogic.Entities.Hop, Package.Services.DTOs.Models.Hop>(hop);


                return new ObjectResult(responseHop);
            }
            catch (Exception ex)
            {
                logger.LogError(ex.Message);
                throw new ServiceException(nameof(WarehouseManagementApiController),
                                        nameof(ExportWarehouses),
                                        "An error occured while exporting hop",
                                        ex);
            }


        }

        /// <summary>
        /// Get a certain warehouse or truck by code
        /// </summary>
        /// <param name="code"></param>
        /// <response code="200">Successful response</response>
        /// <response code="400">An error occurred loading.</response>
        /// <response code="404">Warehouse id not found</response>
        [HttpGet]
        [Route("/warehouse/{code}")]
        [ValidateModelState]
        [SwaggerOperation("GetWarehouse")]
        [SwaggerResponse(statusCode: 200, type: typeof(Warehouse), description: "Successful response")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "An error occurred loading.")]
        public virtual IActionResult GetWarehouse([FromRoute][Required]string code)
        {
            logger.LogInformation("WarehouseManagementApi GetWarehouse started");
            try
            {
                var blHop = warehouseLogic.GetHopByCode(code);
                hop = mapper.Map<Package.Services.DTOs.Models.Hop>(blHop);
                return new ObjectResult(hop);
            }
            catch (LogicException ex)
            {
                logger.LogError(ex.Message);
                throw new ServiceException(nameof(WarehouseManagementApiController),
                                        nameof(GetWarehouse),
                                        "An error occured while importing hop",
                                        ex);
            }
            catch (Exception ex)
            {
                logger.LogError(ex.Message);
                throw new ServiceException(nameof(WarehouseManagementApiController),
                                        nameof(GetWarehouse),
                                        "An error occured while importing hop",
                                        ex);
            }


            
            /*
            string exampleJson = null;
            exampleJson = "\"\"";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Warehouse>(exampleJson)
                        : default(Warehouse);            //TODO: Change the data returned
            return new ObjectResult(example);
            */
        }

        /// <summary>
        /// Imports a hierarchy of Warehouse and Truck objects. 
        /// </summary>
        /// <param name="body"></param>
        /// <response code="200">Successfully loaded.</response>
        /// <response code="400">The operation failed due to an error.</response>
        [HttpPost]
        [Route("/warehouse")]
        [ValidateModelState]
        [SwaggerOperation("ImportWarehouses")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "The operation failed due to an error.")]
        public virtual IActionResult ImportWarehouses([FromBody]Warehouse body)
        {
            int code = 500;
            logger.LogInformation("WarehouseManagementApi ImportWarehouse started");
            try
            {
                Debug.WriteLine("Hop Code " + body.Code);
                
                BusinessLogic.Entities.Hop entitiesHop = mapper.Map<Hop, BusinessLogic.Entities.Hop>(body);
                Debug.WriteLine("Hop Code " + entitiesHop.Code);
                code = warehouseLogic.ImportWarehouse(entitiesHop);
                logger.LogInformation("WarehouseManagementApi ImportWarehouse BL.ImportWarehouse executed");
                return StatusCode(code);
            }
            catch (LogicException ex)
            {
                logger.LogError(ex.Message);
                throw new ServiceException(nameof(WarehouseManagementApiController),
                                        nameof(ImportWarehouses),
                                        "An error occured while importing hop",
                                        ex);
            }
            catch (Exception ex)
            {
                logger.LogError(ex.Message);
                throw new ServiceException(nameof(WarehouseManagementApiController),
                                        nameof(ImportWarehouses),
                                        "An error occured while importing hop",
                                        ex);
            }
        }   
    }
}
