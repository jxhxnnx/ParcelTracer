/*
 * Parcel Logistics Service
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.20.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using AutoMapper;
using Microsoft.AspNetCore.Authorization;
using PaPl.SKS.Package.Services.Attributes;
using PaPl.SKS.Package.Services.DTOs.Models;
using PaPl.SKS.BusinessLogic.Interfaces;
using PaPl.SKS.BusinessLogic;
using PaPl.SKS.DataAccess.Repository;
using PaPl.SKS.DataAccess.Sql;
using Microsoft.Extensions.Logging;
using PaPl.SKS.Package.Services.Exceptions;
using PaPl.SKS.BusinessLogic.Interfaces.Exceptions;
using System.Diagnostics.CodeAnalysis;

namespace PaPl.SKS.Package.Services.Controllers
{
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class LogisticsPartnerApiController : ControllerBase
    {
        private  ILogger<LogisticsPartnerApiController> logger;
        private  ITransitionLogic transitionLogic;
        private IMapper mapper;
        /// <summary>
        /// 
        /// </summary>
        /// <param name="_logger"></param>
        /// <param name="_transitionLogic"></param>
        /// <param name="_mapper"></param>
        public LogisticsPartnerApiController(ILogger<LogisticsPartnerApiController> _logger, ITransitionLogic _transitionLogic, IMapper _mapper)
        {
            logger = _logger;
            transitionLogic = _transitionLogic;
            mapper = _mapper;
        }
       
       
        /// <summary>
        /// Transfer an existing parcel into the system from the service of a logistics partner. 
        /// </summary>
        /// <param name="body"></param>
        /// <param name="trackingId">The tracking ID of the parcel. E.g. PYJRB4HZ6 </param>
        /// <response code="200">Successfully transitioned the parcel</response>
        /// <response code="400">The operation failed due to an error.</response>
        [HttpPost]
        [Route("/parcel/{trackingId}")]
        [ValidateModelState]
        [SwaggerOperation("TransitionParcel")]
        [SwaggerResponse(statusCode: 200, type: typeof(NewParcelInfo), description: "Successfully transitioned the parcel")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "The operation failed due to an error.")]
        public virtual IActionResult TransitionParcel([FromBody] Parcel body, [FromRoute][Required][RegularExpression("^[A-Z0-9]{9}$")] string trackingId)
        {
            logger.LogDebug("LogisticPartnerApi TransitionParcel started");
            try
            {
                BusinessLogic.Entities.Parcel entitiesParcel = mapper.Map<Parcel, BusinessLogic.Entities.Parcel>(body);
                trackingId = transitionLogic.TransitionParcel(entitiesParcel, trackingId);
                logger.LogDebug("LogisticPartnerApi TrackingId: " + trackingId);
                NewParcelInfo info = new();
                info.TrackingId = trackingId;
                return new ObjectResult(info);
            }
            catch (LogicException ex)
            {
                logger.LogError(ex.Message);
                throw new ServiceException(nameof(LogisticsPartnerApiController),
                                        nameof(TransitionParcel),
                                        "An error occured while transporting parcel",
                                        ex);
            }
            catch (Exception ex)
            {
                logger.LogError(ex.Message);
                throw new ServiceException(nameof(LogisticsPartnerApiController),
                                        nameof(TransitionParcel),
                                        "An error occured while transporting parcel",
                                        ex);
            }


            /*

            string exampleJson = null;
            exampleJson = "{\n  \"trackingId\" : \"PYJRB4HZ6\"\n}";

            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<NewParcelInfo>(exampleJson)
            : default(NewParcelInfo);            //TODO: Change the data returned
            return new ObjectResult(example);
            */
        }

    }
}
