/*
 * Parcel Logistics Service
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.20.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using PaPl.SKS.Package.Services.Attributes;

using Microsoft.AspNetCore.Authorization;
using PaPl.SKS.Package.Services.DTOs.Models;
using PaPl.SKS.BusinessLogic.Interfaces;
using PaPl.SKS.BusinessLogic;
using Microsoft.Extensions.Logging;
using PaPl.SKS.BusinessLogic.Interfaces.Exceptions;
using PaPl.SKS.Package.Services.Exceptions;
using AutoMapper;

namespace PaPl.SKS.Package.Services.Controllers
{
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class RecipientApiController : ControllerBase
    {
        private ILogger<RecipientApiController> logger;
        private ITrackParcelLogic trackParcelLogic;
        private IMapper mapper;
        /// <summary>
        /// 
        /// </summary>
        /// <param name="_logger"></param>
        /// <param name="_trackParcelLogic"></param>
        /// <param name="_mapper"></param>
        public RecipientApiController(ILogger<RecipientApiController> _logger, ITrackParcelLogic _trackParcelLogic, IMapper _mapper)
        {
            trackParcelLogic = _trackParcelLogic;
            logger = _logger;
            mapper = _mapper;
        }
       
        /// <summary>
        /// Find the latest state of a parcel by its tracking ID. 
        /// </summary>
        /// <param name="trackingId">The tracking ID of the parcel. E.g. PYJRB4HZ6 </param>
        /// <response code="200">Parcel exists, here&#x27;s the tracking information.</response>
        /// <response code="400">The operation failed due to an error.</response>
        /// <response code="404">Parcel does not exist with this tracking ID.</response>
        [HttpGet]
        [Route("/parcel/{trackingId}")]
        [ValidateModelState]
        [SwaggerOperation("TrackParcel")]
        [SwaggerResponse(statusCode: 200, type: typeof(TrackingInformation), description: "Parcel exists, here&#x27;s the tracking information.")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "The operation failed due to an error.")]
        public virtual IActionResult TrackParcel([FromRoute][Required][RegularExpression("^[A-Z0-9]{9}$")] string trackingId)
        {
            logger.LogInformation("RecipientApi Trackparcel start");
            try
            {
                var daoParcel = trackParcelLogic.TrackParcel(trackingId);
                TrackingInformation info = new();
                info.State = (TrackingInformation.StateEnum?)daoParcel.State;      
                if(daoParcel.FutureHops.Count > 0)
                {
                    info.FutureHops = new();
                    foreach (var hopArrival in daoParcel.FutureHops)
                    {
                        var temphopArrival = mapper.Map<DataAccess.Entities.HopArrival, HopArrival>(hopArrival);
                        info.FutureHops.Add(temphopArrival);
                    }
                }
                if(daoParcel.VisitedHops.Count > 0)
                {
                    info.VisitedHops = new();
                    foreach (var hopArrival in daoParcel.VisitedHops)
                    {
                        var temphopArrival = mapper.Map<DataAccess.Entities.HopArrival, HopArrival>(hopArrival);
                        info.VisitedHops.Add(temphopArrival);
                    }
                }
                

                
                return new ObjectResult(info);
            }
            catch (LogicException ex)
            {
                logger.LogError(ex.Message);
                throw new ServiceException(nameof(RecipientApiController),
                                        nameof(TrackParcel),
                                        "An error occured while transporting parcel",
                                        ex);
            }
            catch (Exception ex)
            {
                logger.LogError(ex.Message);
                throw new ServiceException(nameof(RecipientApiController),
                                        nameof(TrackParcel),
                                        "An error occured while transporting parcel",
                                        ex);
            }

            /*
            string exampleJson = null;
            exampleJson = "{\n  \"visitedHops\" : [ {\n    \"dateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"code\" : \"code\",\n    \"description\" : \"description\"\n  }, {\n    \"dateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"code\" : \"code\",\n    \"description\" : \"description\"\n  } ],\n  \"futureHops\" : [ null, null ],\n  \"state\" : \"Pickup\"\n}";

            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<TrackingInformation>(exampleJson)
            : default(TrackingInformation);            //TODO: Change the data returned
            return new ObjectResult(example);
            */
        }
    }
}
