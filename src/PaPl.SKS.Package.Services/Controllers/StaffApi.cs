/*
 * Parcel Logistics Service
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.20.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using PaPl.SKS.Package.Services.Attributes;

using Microsoft.AspNetCore.Authorization;
using PaPl.SKS.Package.Services.DTOs.Models;
using PaPl.SKS.BusinessLogic.Interfaces;
using PaPl.SKS.BusinessLogic;
using Microsoft.Extensions.Logging;
using PaPl.SKS.BusinessLogic.Interfaces.Exceptions;
using PaPl.SKS.Package.Services.Exceptions;

namespace PaPl.SKS.Package.Services.Controllers
{
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class StaffApiController : ControllerBase
    {
        private  IReportParcelLogic reportParcelLogic;
        private  ILogger<StaffApiController> logger;
        /// <summary>
        /// 
        /// </summary>
        /// <param name="_reportParcelLogic"></param>
        /// <param name="_logger"></param>
        public StaffApiController(IReportParcelLogic _reportParcelLogic, ILogger<StaffApiController> _logger)
        {
            reportParcelLogic = _reportParcelLogic;
            logger = _logger;
        }
    
        /// <summary>
        /// Report that a Parcel has arrived at a certain warehouse or Truck. 
        /// </summary>
        /// <param name="trackingId">The tracking ID of the parcel. E.g. PYJRB4HZ6 </param>
        /// <param name="code">The Code of the hop (Warehouse or Truck).</param>
        /// <response code="200">Successfully reported hop.</response>
        /// <response code="400">The operation failed due to an error.</response>
        /// <response code="404">Parcel does not exist with this tracking ID or hop with code not found.</response>
        [HttpPost]
        [Route("/parcel/{trackingId}/reportHop/{code}")]
        [ValidateModelState]
        [SwaggerOperation("reportParcelHop")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "The operation failed due to an error.")]
        public virtual IActionResult ReportParcelHop([FromRoute][Required][RegularExpression("^[A-Z0-9]{9}$")] string trackingId, [FromRoute][Required][RegularExpression("^[A-Z0-9]{1,20}$")] string code)
        {
            logger.LogInformation("StaffApi ReportParcelHop started");

            int statusCode;
            try
            {
                statusCode = reportParcelLogic.ReportParcelHop(trackingId, code);
                return StatusCode(statusCode);
            }
            
            catch (Exception ex)
            {
                logger.LogError(ex.Message);
                throw new ServiceException(nameof(StaffApiController),
                                        nameof(ReportParcelHop),
                                        "An error occured while transporting parcel",
                                        ex);
                
            }


            
        }

        /// <summary>
        /// Report that a Parcel has been delivered at it&#x27;s final destination address. 
        /// </summary>
        /// <param name="trackingId">The tracking ID of the parcel. E.g. PYJRB4HZ6 </param>
        /// <response code="200">Successfully reported hop.</response>
        /// <response code="400">The operation failed due to an error.</response>
        /// <response code="404">Parcel does not exist with this tracking ID. </response>
        [HttpPost]
        [Route("/parcel/{trackingId}/reportDelivery/")]
        [ValidateModelState]
        [SwaggerOperation("ReportParcelDelivery")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "The operation failed due to an error.")]
        public virtual IActionResult ReportParcelDelivery([FromRoute][Required][RegularExpression("^[A-Z0-9]{9}$")] string trackingId)
        {
            logger.LogInformation("StaffApi ReportParcelDelivery started");

            int statusCode;

            try
            {
                statusCode = reportParcelLogic.ReportParcelDelivery(trackingId);
                return StatusCode(statusCode);
            }
           
            catch (Exception ex)
            {
                logger.LogError(ex.Message);
                throw new ServiceException(nameof(StaffApiController),
                                        nameof(ReportParcelDelivery),
                                        "An error occured while transporting parcel",
                                        ex);
            }
            
            
        }
    }
}
